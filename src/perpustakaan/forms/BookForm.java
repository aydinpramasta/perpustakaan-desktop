/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan.forms;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import perpustakaan.utils.Database;
import perpustakaan.utils.Validator;

/**
 *
 * @author aydin
 */
public class BookForm extends javax.swing.JFrame {

    /**
     * Creates new form BookForm
     */
    public BookForm() {
        initComponents();

        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelHeading = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        btnBookForm = new javax.swing.JButton();
        btnMemberForm = new javax.swing.JButton();
        btnBorrowForm = new javax.swing.JButton();
        btnReturnForm = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelSearch = new javax.swing.JLabel();
        cmbSearchColumn = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        labelTitle = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        labelAmount = new javax.swing.JLabel();
        labelWriter = new javax.swing.JLabel();
        txtWriter = new javax.swing.JTextField();
        txtPublisher = new javax.swing.JTextField();
        labelPublisher = new javax.swing.JLabel();
        labelCreatedAt = new javax.swing.JLabel();
        cmbCreatedAt = new com.toedter.calendar.JDateChooser();
        labelStatus = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        txtPublishYear = new javax.swing.JTextField();
        labelPublishYear = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableBooks = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Buku");
        setExtendedState(MAXIMIZED_BOTH);

        jPanel1.setBackground(new java.awt.Color(174, 102, 231));

        labelHeading.setFont(new java.awt.Font("Fira Sans", 1, 28)); // NOI18N
        labelHeading.setForeground(new java.awt.Color(255, 255, 255));
        labelHeading.setText("DATA BUKU");

        labelDescription.setFont(new java.awt.Font("Fira Sans", 0, 16)); // NOI18N
        labelDescription.setText("Form untuk menambah, mengubah, dan menghapus data buku.");

        btnBookForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnBookForm.setText("Data Buku");
        btnBookForm.setEnabled(false);
        btnBookForm.setPreferredSize(new java.awt.Dimension(150, 35));

        btnMemberForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnMemberForm.setText("Data Member");
        btnMemberForm.setPreferredSize(new java.awt.Dimension(150, 35));
        btnMemberForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemberFormActionPerformed(evt);
            }
        });

        btnBorrowForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnBorrowForm.setText("Data Peminjaman");
        btnBorrowForm.setPreferredSize(new java.awt.Dimension(150, 35));
        btnBorrowForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrowFormActionPerformed(evt);
            }
        });

        btnReturnForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnReturnForm.setText("Data Pengembalian");
        btnReturnForm.setPreferredSize(new java.awt.Dimension(150, 35));
        btnReturnForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDescription)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelHeading)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnMemberForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrowForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReturnForm, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHeading)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemberForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBorrowForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReturnForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelDescription)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(174, 102, 231));

        labelSearch.setFont(new java.awt.Font("Fira Sans", 1, 18)); // NOI18N
        labelSearch.setText("Pencarian");

        cmbSearchColumn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "title", "amount", "writer", "publisher", "status", "publish_year" }));
        cmbSearchColumn.setPreferredSize(new java.awt.Dimension(150, 35));

        txtSearch.setPreferredSize(new java.awt.Dimension(300, 35));

        btnSearch.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnSearch.setText("Cari");
        btnSearch.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labelSearch)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbSearchColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSearchColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        labelID.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelID.setText("ID Buku");

        txtID.setEditable(false);
        txtID.setEnabled(false);
        txtID.setPreferredSize(new java.awt.Dimension(100, 35));

        labelTitle.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelTitle.setText("Judul Buku");

        txtTitle.setPreferredSize(new java.awt.Dimension(300, 35));

        txtAmount.setPreferredSize(new java.awt.Dimension(100, 35));

        labelAmount.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelAmount.setText("Jumlah");

        labelWriter.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelWriter.setText("Pengarang");

        txtWriter.setPreferredSize(new java.awt.Dimension(300, 35));

        txtPublisher.setPreferredSize(new java.awt.Dimension(300, 35));

        labelPublisher.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelPublisher.setText("Penerbit");

        labelCreatedAt.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelCreatedAt.setText("Tanggal Masuk");

        cmbCreatedAt.setDateFormatString("d MMMMM y");
        cmbCreatedAt.setPreferredSize(new java.awt.Dimension(300, 35));

        labelStatus.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelStatus.setText("Status Buku");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tersedia", "Tidak Tersedia" }));
        cmbStatus.setPreferredSize(new java.awt.Dimension(300, 35));

        txtPublishYear.setPreferredSize(new java.awt.Dimension(300, 35));

        labelPublishYear.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelPublishYear.setText("Tahun Terbit");

        btnNew.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnNew.setText("Baru");
        btnNew.setPreferredSize(new java.awt.Dimension(150, 35));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnSave.setText("Simpan");
        btnSave.setPreferredSize(new java.awt.Dimension(150, 35));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnEdit.setText("Ubah");
        btnEdit.setEnabled(false);
        btnEdit.setPreferredSize(new java.awt.Dimension(150, 35));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.setEnabled(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(150, 35));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnLogout.setText("Keluar");
        btnLogout.setPreferredSize(new java.awt.Dimension(150, 35));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(labelWriter)
                        .addGap(48, 48, 48)
                        .addComponent(txtWriter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelTitle)
                            .addComponent(labelID))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(labelAmount)
                        .addGap(48, 48, 48)
                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(labelPublisher)
                        .addGap(48, 48, 48)
                        .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelCreatedAt, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelStatus, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbCreatedAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(labelPublishYear)
                        .addGap(48, 48, 48)
                        .addComponent(txtPublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(152, 152, 152))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(244, 244, 244))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelID))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle)
                            .addComponent(labelCreatedAt)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPublisher))
                        .addGap(18, 18, 18)
                        .addComponent(cmbCreatedAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAmount)
                            .addComponent(labelStatus))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtWriter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelWriter)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPublishYear))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        tableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBooks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBooksMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableBooks);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtID.setText("");
        txtTitle.setText("");
        txtAmount.setText("");
        txtWriter.setText("");
        txtPublisher.setText("");
        cmbCreatedAt.setCalendar(null);
        cmbStatus.setSelectedIndex(0);
        txtPublishYear.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void tableBooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBooksMouseClicked
        String id = tableBooks.getValueAt(tableBooks.getSelectedRow(), 0).toString();
        String title = tableBooks.getValueAt(tableBooks.getSelectedRow(), 1).toString();
        String amount = tableBooks.getValueAt(tableBooks.getSelectedRow(), 2).toString();
        String writer = tableBooks.getValueAt(tableBooks.getSelectedRow(), 3).toString();
        String publisher = tableBooks.getValueAt(tableBooks.getSelectedRow(), 4).toString();

        Date createdAt = null;
        try {
            createdAt = new SimpleDateFormat("d MMMMM y").parse(tableBooks.getValueAt(tableBooks.getSelectedRow(), 5).toString());
        } catch (ParseException exception) {
            JOptionPane.showMessageDialog(null, "Error parsing date: " + exception.getMessage());
        }

        String status = tableBooks.getValueAt(tableBooks.getSelectedRow(), 6).toString();
        String publishYear = tableBooks.getValueAt(tableBooks.getSelectedRow(), 7).toString();

        txtID.setText(id);
        txtTitle.setText(title);
        txtAmount.setText(amount);
        txtWriter.setText(writer);
        txtPublisher.setText(publisher);
        cmbCreatedAt.setDate(createdAt);
        cmbStatus.setSelectedItem(status);
        txtPublishYear.setText(publishYear);

        btnSave.setEnabled(false);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tableBooksMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String query = "SELECT * FROM books WHERE " + cmbSearchColumn.getSelectedItem() + " LIKE ? ORDER BY id DESC";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, "%" + txtSearch.getText() + "%");

            ResultSet result = statement.executeQuery();

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tableModel.addColumn("ID");
            tableModel.addColumn("Judul");
            tableModel.addColumn("Jumlah");
            tableModel.addColumn("Pengarang");
            tableModel.addColumn("Penerbit");
            tableModel.addColumn("Tanggal Masuk");
            tableModel.addColumn("Status Buku");
            tableModel.addColumn("Tahun Terbit");

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            tableModel.setRowCount(0);

            while (result.next()) {
                Object[] data = {
                    result.getLong("id"),
                    result.getString("title"),
                    result.getInt("amount"),
                    result.getString("writer"),
                    result.getString("publisher"),
                    new SimpleDateFormat("d MMMMM y").format(result.getDate("created_at")),
                    result.getString("status"),
                    result.getInt("publish_year")
                };

                tableModel.addRow(data);
            }

            tableBooks.setModel(tableModel);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error ambil data: " + exception.getMessage());
        } finally {
            database.close();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String title = txtTitle.getText();
        String amount = txtAmount.getText();
        String writer = txtWriter.getText();
        String publisher = txtPublisher.getText();
        Date createdAt = cmbCreatedAt.getDate();
        String status = cmbStatus.getSelectedItem().toString();
        String publishYear = txtPublishYear.getText();

        if (Validator.isEmpty(title)
                || Validator.isEmpty(amount)
                || Validator.isEmpty(writer)
                || Validator.isEmpty(publisher)
                || createdAt == null
                || Validator.isEmpty(publishYear)) {
            JOptionPane.showMessageDialog(null, "Kolom tidak boleh kosong!");
            return;
        }

        if (Validator.isNotInteger(amount) || Validator.isNotInteger(publishYear)) {
            JOptionPane.showMessageDialog(null, "Kolom jumlah dan tahun terbit harus berupa angka!");
            return;
        }

        String query = "INSERT INTO books (title, amount, writer, publisher, created_at, status, publish_year) VALUES (?, ?, ?, ?, ?, ?, ?)";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, title);
            statement.setInt(2, Integer.parseInt(amount));
            statement.setString(3, writer);
            statement.setString(4, publisher);
            statement.setDate(5, new java.sql.Date(createdAt.getTime()));
            statement.setString(6, status);
            statement.setInt(7, Integer.parseInt(publishYear));

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil menambah data!");
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error tambah data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtTitle.setText("");
        txtAmount.setText("");
        txtWriter.setText("");
        txtPublisher.setText("");
        cmbCreatedAt.setCalendar(null);
        cmbStatus.setSelectedIndex(0);
        txtPublishYear.setText("");

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String id = txtID.getText();
        String title = txtTitle.getText();
        String amount = txtAmount.getText();
        String writer = txtWriter.getText();
        String publisher = txtPublisher.getText();
        Date createdAt = cmbCreatedAt.getDate();
        String status = cmbStatus.getSelectedItem().toString();
        String publishYear = txtPublishYear.getText();

        if (Validator.isEmpty(id)
                || Validator.isEmpty(title)
                || Validator.isEmpty(amount)
                || Validator.isEmpty(writer)
                || Validator.isEmpty(publisher)
                || createdAt == null
                || Validator.isEmpty(publishYear)) {
            JOptionPane.showMessageDialog(null, "Kolom tidak boleh kosong!");
            return;
        }

        if (Validator.isNotInteger(amount) || Validator.isNotInteger(publishYear)) {
            JOptionPane.showMessageDialog(null, "Kolom jumlah dan tahun terbit harus berupa angka!");
            return;
        }

        String query = "UPDATE books SET title = ?, amount = ?, writer = ?, publisher = ?, created_at = ?, status = ?, publish_year = ? WHERE id = ?";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, title);
            statement.setInt(2, Integer.parseInt(amount));
            statement.setString(3, writer);
            statement.setString(4, publisher);
            statement.setDate(5, new java.sql.Date(createdAt.getTime()));
            statement.setString(6, status);
            statement.setInt(7, Integer.parseInt(publishYear));
            statement.setLong(8, Long.parseLong(id));

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil mengubah data!");
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error update data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtTitle.setText("");
        txtAmount.setText("");
        txtWriter.setText("");
        txtPublisher.setText("");
        cmbCreatedAt.setCalendar(null);
        cmbStatus.setSelectedIndex(0);
        txtPublishYear.setText("");

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(
                null,
                "Data ini akan dihapus, lanjutkan?",
                "Konfirmasi", JOptionPane.YES_NO_OPTION
        );

        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }

        String id = txtID.getText();

        if (Validator.isEmpty(id)) {
            JOptionPane.showMessageDialog(null, "Kolom ID tidak boleh kosong!");
        }

        String query = "DELETE FROM books WHERE id = ?";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setLong(1, Long.parseLong(id));

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil menghapus data!");
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error hapus data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtTitle.setText("");
        txtAmount.setText("");
        txtWriter.setText("");
        txtPublisher.setText("");
        cmbCreatedAt.setCalendar(null);
        cmbStatus.setSelectedIndex(0);
        txtPublishYear.setText("");

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBorrowFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrowFormActionPerformed
        this.setVisible(false);

        new BorrowForm().setVisible(true);
    }//GEN-LAST:event_btnBorrowFormActionPerformed

    private void btnReturnFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnFormActionPerformed
        this.setVisible(false);

        new ReturnForm().setVisible(true);
    }//GEN-LAST:event_btnReturnFormActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(
                null,
                "Anda yakin ingin keluar?",
                "Konfirmasi", JOptionPane.YES_NO_OPTION
        );

        if (confirmation == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            new LoginForm().setVisible(true);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnMemberFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemberFormActionPerformed
        this.setVisible(false);

        new MemberForm().setVisible(true);
    }//GEN-LAST:event_btnMemberFormActionPerformed

    private void showData() {
        String query = "SELECT * FROM books ORDER BY id DESC";
        Database database = new Database();

        try {
            ResultSet result = database.connection.createStatement().executeQuery(query);

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tableModel.addColumn("ID");
            tableModel.addColumn("Judul");
            tableModel.addColumn("Jumlah");
            tableModel.addColumn("Pengarang");
            tableModel.addColumn("Penerbit");
            tableModel.addColumn("Tanggal Masuk");
            tableModel.addColumn("Status Buku");
            tableModel.addColumn("Tahun Terbit");

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            tableModel.setRowCount(0);

            while (result.next()) {
                Object[] data = {
                    result.getLong("id"),
                    result.getString("title"),
                    result.getInt("amount"),
                    result.getString("writer"),
                    result.getString("publisher"),
                    new SimpleDateFormat("d MMMMM y").format(result.getDate("created_at")),
                    result.getString("status"),
                    result.getInt("publish_year")
                };

                tableModel.addRow(data);
            }

            tableBooks.setModel(tableModel);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error ambil data: " + exception.getMessage());
        } finally {
            database.close();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookForm;
    private javax.swing.JButton btnBorrowForm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMemberForm;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReturnForm;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private com.toedter.calendar.JDateChooser cmbCreatedAt;
    private javax.swing.JComboBox<String> cmbSearchColumn;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAmount;
    private javax.swing.JLabel labelCreatedAt;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelHeading;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelPublishYear;
    private javax.swing.JLabel labelPublisher;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelWriter;
    private javax.swing.JTable tableBooks;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPublishYear;
    private javax.swing.JTextField txtPublisher;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTitle;
    private javax.swing.JTextField txtWriter;
    // End of variables declaration//GEN-END:variables
}
