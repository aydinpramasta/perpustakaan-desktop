/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan.forms;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import perpustakaan.utils.BCrypt;
import perpustakaan.utils.Database;
import perpustakaan.utils.Validator;

/**
 *
 * @author aydin
 */
public class MemberForm extends javax.swing.JFrame {

    private final String ROLE = "Member";
    private String EDIT_CURRENT_USER_NUMBER;

    /**
     * Creates new form BookForm
     */
    public MemberForm() {
        initComponents();

        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelHeading = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        btnBookForm = new javax.swing.JButton();
        btnMemberForm = new javax.swing.JButton();
        btnBorrowForm = new javax.swing.JButton();
        btnReturnForm = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelSearch = new javax.swing.JLabel();
        cmbSearchColumn = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        labelNumberType = new javax.swing.JLabel();
        labelNumber = new javax.swing.JLabel();
        txtNumber = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        labelAddress = new javax.swing.JLabel();
        labelTelephone = new javax.swing.JLabel();
        labelGender = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox<>();
        labelPassword = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        cmbNumberType = new javax.swing.JComboBox<>();
        txtTelephone = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMember = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Data Member");
        setExtendedState(MAXIMIZED_BOTH);

        jPanel1.setBackground(new java.awt.Color(174, 102, 231));

        labelHeading.setFont(new java.awt.Font("Fira Sans", 1, 28)); // NOI18N
        labelHeading.setForeground(new java.awt.Color(255, 255, 255));
        labelHeading.setText("DATA MEMBER");

        labelDescription.setFont(new java.awt.Font("Fira Sans", 0, 16)); // NOI18N
        labelDescription.setText("Form untuk menambah, mengubah, dan menghapus data member.");

        btnBookForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnBookForm.setText("Data Buku");
        btnBookForm.setPreferredSize(new java.awt.Dimension(150, 35));
        btnBookForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookFormActionPerformed(evt);
            }
        });

        btnMemberForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnMemberForm.setText("Data Member");
        btnMemberForm.setEnabled(false);
        btnMemberForm.setPreferredSize(new java.awt.Dimension(150, 35));

        btnBorrowForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnBorrowForm.setText("Data Peminjaman");
        btnBorrowForm.setPreferredSize(new java.awt.Dimension(150, 35));

        btnReturnForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnReturnForm.setText("Data Pengembalian");
        btnReturnForm.setPreferredSize(new java.awt.Dimension(150, 35));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDescription)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelHeading)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnMemberForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrowForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReturnForm, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHeading)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemberForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBorrowForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReturnForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelDescription)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(174, 102, 231));

        labelSearch.setFont(new java.awt.Font("Fira Sans", 1, 18)); // NOI18N
        labelSearch.setText("Pencarian");

        cmbSearchColumn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "name", "number_type", "number", "address", "telephone", "gender" }));
        cmbSearchColumn.setPreferredSize(new java.awt.Dimension(150, 35));

        txtSearch.setPreferredSize(new java.awt.Dimension(300, 35));

        btnSearch.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnSearch.setText("Cari");
        btnSearch.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labelSearch)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbSearchColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSearchColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        labelID.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelID.setText("ID Member");

        txtID.setEditable(false);
        txtID.setEnabled(false);
        txtID.setPreferredSize(new java.awt.Dimension(100, 35));

        labelName.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelName.setText("Nama");

        txtName.setPreferredSize(new java.awt.Dimension(300, 35));

        labelNumberType.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelNumberType.setText("Tipe Nomor");

        labelNumber.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelNumber.setText("Nomor");

        txtNumber.setPreferredSize(new java.awt.Dimension(300, 35));

        txtAddress.setPreferredSize(new java.awt.Dimension(300, 35));

        labelAddress.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelAddress.setText("Alamat");

        labelTelephone.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelTelephone.setText("Telepon");

        labelGender.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelGender.setText("Jenis Kelamin");

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Laki-laki", "Perempuan" }));
        cmbGender.setPreferredSize(new java.awt.Dimension(300, 35));

        labelPassword.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelPassword.setText("Password");

        btnNew.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnNew.setText("Baru");
        btnNew.setPreferredSize(new java.awt.Dimension(150, 35));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnSave.setText("Simpan");
        btnSave.setPreferredSize(new java.awt.Dimension(150, 35));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnEdit.setText("Ubah");
        btnEdit.setEnabled(false);
        btnEdit.setPreferredSize(new java.awt.Dimension(150, 35));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.setEnabled(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(150, 35));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnLogout.setText("Keluar");
        btnLogout.setPreferredSize(new java.awt.Dimension(150, 35));

        cmbNumberType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIS", "NIP", "NIK" }));
        cmbNumberType.setPreferredSize(new java.awt.Dimension(300, 35));

        txtTelephone.setPreferredSize(new java.awt.Dimension(300, 35));

        txtPassword.setPreferredSize(new java.awt.Dimension(300, 35));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(labelNumber)
                                .addGap(48, 48, 48)
                                .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelName)
                                    .addComponent(labelID))
                                .addGap(48, 48, 48)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbNumberType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(labelNumberType)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(labelAddress)
                        .addGap(48, 48, 48)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTelephone, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelGender, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelPassword, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(152, 152, 152))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(244, 244, 244))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelID))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelName)
                            .addComponent(labelTelephone)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelAddress))
                        .addGap(18, 18, 18)
                        .addComponent(txtTelephone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNumberType)
                            .addComponent(labelGender)
                            .addComponent(cmbNumberType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNumber)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        tableMember.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableMember.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMemberMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableMember);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String query = "SELECT * FROM users WHERE role = '" + ROLE + "' AND " + cmbSearchColumn.getSelectedItem().toString() + " LIKE ? ORDER BY id DESC";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, "%" + txtSearch.getText() + "%");

            ResultSet result = statement.executeQuery();

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tableModel.addColumn("ID");
            tableModel.addColumn("Nama");
            tableModel.addColumn("Tipe Nomor");
            tableModel.addColumn("Nomor");
            tableModel.addColumn("Alamat");
            tableModel.addColumn("Telepon");
            tableModel.addColumn("Jenis Kelamin");

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            tableModel.setRowCount(0);

            while (result.next()) {
                Object[] data = {
                    result.getLong("id"),
                    result.getString("name"),
                    result.getString("number_type"),
                    result.getLong("number"),
                    result.getString("address"),
                    result.getLong("telephone"),
                    result.getString("gender")
                };

                tableModel.addRow(data);
            }

            tableMember.setModel(tableModel);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error ambil data: " + exception.getMessage());
        } finally {
            database.close();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBookFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookFormActionPerformed
        this.setVisible(false);

        new BookForm().setVisible(true);
    }//GEN-LAST:event_btnBookFormActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtID.setText("");
        txtName.setText("");
        cmbNumberType.setSelectedIndex(0);
        txtNumber.setText("");
        txtAddress.setText("");
        txtTelephone.setText("");
        cmbGender.setSelectedIndex(0);
        txtPassword.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String name = txtName.getText();
        String numberType = cmbNumberType.getSelectedItem().toString();
        String number = txtNumber.getText();
        String address = txtAddress.getText();
        String telephone = txtTelephone.getText();
        String gender = cmbGender.getSelectedItem().toString();
        String password = new String(txtPassword.getPassword());

        if (Validator.isEmpty(name)
                || Validator.isEmpty(numberType)
                || Validator.isEmpty(number)
                || Validator.isEmpty(address)
                || Validator.isEmpty(telephone)
                || Validator.isEmpty(gender)
                || Validator.isEmpty(password)) {
            JOptionPane.showMessageDialog(null, "Kolom tidak boleh kosong!");
            return;
        }

        if (Validator.isNotLong(number) || Validator.isNotLong(telephone)) {
            JOptionPane.showMessageDialog(null, "Kolom nomor dan telepon harus berupa angka!");
            return;
        }

        Database database = new Database();

        try {
            // cek apakah nomor sudah ada di database
            String q = "SELECT number FROM users WHERE number = ? LIMIT 1";

            PreparedStatement stmt = database.connection.prepareStatement(q);
            stmt.setLong(1, Long.parseLong(number));

            ResultSet user = stmt.executeQuery();

            if (user.next()) {
                JOptionPane.showMessageDialog(null, "Nomor ini sudah dipakai oleh user lain!");
                return;
            }

            String hashedPassword = BCrypt.hashpw(password, BCrypt.gensalt("$2y", 10));

            String query = "INSERT INTO users (name, number_type, number, address, telephone, gender, password, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, name);
            statement.setString(2, numberType);
            statement.setLong(3, Long.parseLong(number));
            statement.setString(4, address);
            statement.setLong(5, Long.parseLong(telephone));
            statement.setString(6, gender);
            statement.setString(7, hashedPassword);
            statement.setString(8, ROLE);

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil menambah data! Nomor: " + number + " | Password: " + password);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error tambah data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtName.setText("");
        cmbNumberType.setSelectedIndex(0);
        txtNumber.setText("");
        txtAddress.setText("");
        txtTelephone.setText("");
        cmbGender.setSelectedIndex(0);
        txtPassword.setText("");

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String id = txtID.getText();
        String name = txtName.getText();
        String numberType = cmbNumberType.getSelectedItem().toString();
        String number = txtNumber.getText();
        String address = txtAddress.getText();
        String telephone = txtTelephone.getText();
        String gender = cmbGender.getSelectedItem().toString();
        String password = new String(txtPassword.getPassword());

        if (Validator.isEmpty(id)
                || Validator.isEmpty(name)
                || Validator.isEmpty(numberType)
                || Validator.isEmpty(number)
                || Validator.isEmpty(address)
                || Validator.isEmpty(telephone)
                || Validator.isEmpty(gender)) {
            JOptionPane.showMessageDialog(null, "Kolom tidak boleh kosong!");
            return;
        }

        if (Validator.isNotLong(number) || Validator.isNotLong(telephone)) {
            JOptionPane.showMessageDialog(null, "Kolom nomor dan telepon harus berupa angka!");
            return;
        }

        int confirmation = JOptionPane.showConfirmDialog(
                null,
                "Anda yakin ingin mengubah data ini?",
                "Konfirmasi", JOptionPane.YES_NO_OPTION
        );

        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }

        Database database = new Database();

        try {
            // cek apakah nomor sudah ada di database
            String q = "SELECT number FROM users WHERE number = ? LIMIT 1";

            PreparedStatement stmt = database.connection.prepareStatement(q);
            stmt.setLong(1, Long.parseLong(number));

            ResultSet user = stmt.executeQuery();

            if (user.next() && !number.equals(EDIT_CURRENT_USER_NUMBER)) {
                JOptionPane.showMessageDialog(null, "Nomor ini sudah dipakai oleh user lain!");

                txtNumber.setText(EDIT_CURRENT_USER_NUMBER);

                return;
            }

            String query;
            if (Validator.isEmpty(password)) {
                query = "UPDATE users SET name = ?, number_type = ?, number = ?, address = ?, telephone = ?, gender = ?, role = ? WHERE id = ?";
            } else {
                query = "UPDATE users SET name = ?, number_type = ?, number = ?, address = ?, telephone = ?, gender = ?, role = ?, password = ? WHERE id = ?";
            }

            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, name);
            statement.setString(2, numberType);
            statement.setLong(3, Long.parseLong(number));
            statement.setString(4, address);
            statement.setLong(5, Long.parseLong(telephone));
            statement.setString(6, gender);
            statement.setString(7, ROLE);

            if (Validator.isEmpty(password)) {
                statement.setLong(8, Long.parseLong(id));
            } else {
                String hashedPassword = BCrypt.hashpw(password, BCrypt.gensalt("$2y", 10));

                statement.setString(8, hashedPassword);
                statement.setLong(9, Long.parseLong(id));
            }

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil mengubah data! Nomor: " + number + " | Password: " + password);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error update data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtName.setText("");
        cmbNumberType.setSelectedIndex(0);
        txtNumber.setText("");
        txtAddress.setText("");
        txtTelephone.setText("");
        cmbGender.setSelectedIndex(0);
        txtPassword.setText("");

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnEditActionPerformed

    private void tableMemberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMemberMouseClicked
        String id = tableMember.getValueAt(tableMember.getSelectedRow(), 0).toString();
        String name = tableMember.getValueAt(tableMember.getSelectedRow(), 1).toString();
        String numberType = tableMember.getValueAt(tableMember.getSelectedRow(), 2).toString();
        String number = tableMember.getValueAt(tableMember.getSelectedRow(), 3).toString();
        String address = tableMember.getValueAt(tableMember.getSelectedRow(), 4).toString();
        String telephone = tableMember.getValueAt(tableMember.getSelectedRow(), 5).toString();
        String gender = tableMember.getValueAt(tableMember.getSelectedRow(), 6).toString();

        EDIT_CURRENT_USER_NUMBER = number;

        txtID.setText(id);
        txtName.setText(name);
        cmbNumberType.setSelectedItem(numberType);
        txtNumber.setText(number);
        txtAddress.setText(address);
        txtTelephone.setText(telephone);
        cmbGender.setSelectedItem(gender);

        btnSave.setEnabled(false);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tableMemberMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(
                null,
                "Data ini akan dihapus, lanjutkan?",
                "Konfirmasi", JOptionPane.YES_NO_OPTION
        );

        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }

        String id = txtID.getText();

        if (Validator.isEmpty(id)) {
            JOptionPane.showMessageDialog(null, "Kolom ID tidak boleh kosong!");
            return;
        }

        String query = "DELETE FROM users WHERE id = ? AND role = '" + ROLE + "'";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setLong(1, Long.parseLong(id));

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil menghapus data!");
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error hapus data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtName.setText("");
        cmbNumberType.setSelectedIndex(0);
        txtNumber.setText("");
        txtAddress.setText("");
        txtTelephone.setText("");
        cmbGender.setSelectedIndex(0);
        txtPassword.setText("");

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnSave.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void showData() {
        String query = "SELECT * FROM users WHERE role = '" + ROLE + "' ORDER BY id DESC";
        Database database = new Database();

        try {
            ResultSet result = database.connection.createStatement().executeQuery(query);

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tableModel.addColumn("ID");
            tableModel.addColumn("Nama");
            tableModel.addColumn("Tipe Nomor");
            tableModel.addColumn("Nomor");
            tableModel.addColumn("Alamat");
            tableModel.addColumn("Telepon");
            tableModel.addColumn("Jenis Kelamin");

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            tableModel.setRowCount(0);

            while (result.next()) {
                Object[] data = {
                    result.getLong("id"),
                    result.getString("name"),
                    result.getString("number_type"),
                    result.getLong("number"),
                    result.getString("address"),
                    result.getLong("telephone"),
                    result.getString("gender")
                };

                tableModel.addRow(data);
            }

            tableMember.setModel(tableModel);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error ambil data: " + exception.getMessage());
        } finally {
            database.close();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookForm;
    private javax.swing.JButton btnBorrowForm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMemberForm;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnReturnForm;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbNumberType;
    private javax.swing.JComboBox<String> cmbSearchColumn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelAddress;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelGender;
    private javax.swing.JLabel labelHeading;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelNumber;
    private javax.swing.JLabel labelNumberType;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JLabel labelTelephone;
    private javax.swing.JTable tableMember;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTelephone;
    // End of variables declaration//GEN-END:variables
}
