/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan.forms;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import perpustakaan.utils.Database;
import perpustakaan.utils.Validator;

/**
 *
 * @author aydin
 */
public class ReturnForm extends javax.swing.JFrame {

    private final String[] STATUSES = {
        "Belum dikonfirmasi",
        "Telah dikembalikan",
        "Terlambat",
        "Belum membayar denda"
    };

    private String EDIT_CURRENT_STATUS;

    /**
     * Creates new form BookForm
     */
    public ReturnForm() {
        initComponents();

        showData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelHeading = new javax.swing.JLabel();
        labelDescription = new javax.swing.JLabel();
        btnBookForm = new javax.swing.JButton();
        btnMemberForm = new javax.swing.JButton();
        btnBorrowForm = new javax.swing.JButton();
        btnReturnForm = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelSearch = new javax.swing.JLabel();
        cmbSearchColumn = new javax.swing.JComboBox<>();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        labelBookTitle = new javax.swing.JLabel();
        txtBookTitle = new javax.swing.JTextField();
        labelUserName = new javax.swing.JLabel();
        labelReturnedAt = new javax.swing.JLabel();
        labelFine = new javax.swing.JLabel();
        labelStatus = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox<>();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        txtFine = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        labelBorrowAmount = new javax.swing.JLabel();
        txtBorrowAmount = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbReturnedAt = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableReturns = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setExtendedState(MAXIMIZED_BOTH);

        jPanel1.setBackground(new java.awt.Color(174, 102, 231));

        labelHeading.setFont(new java.awt.Font("Fira Sans", 1, 28)); // NOI18N
        labelHeading.setForeground(new java.awt.Color(255, 255, 255));
        labelHeading.setText("DATA PENGEMBALIAN");

        labelDescription.setFont(new java.awt.Font("Fira Sans", 0, 16)); // NOI18N
        labelDescription.setText("Form untuk menambah, mengubah, dan menghapus data pengembalian.");

        btnBookForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnBookForm.setText("Data Buku");
        btnBookForm.setPreferredSize(new java.awt.Dimension(150, 35));
        btnBookForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookFormActionPerformed(evt);
            }
        });

        btnMemberForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnMemberForm.setText("Data Member");
        btnMemberForm.setPreferredSize(new java.awt.Dimension(150, 35));

        btnBorrowForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnBorrowForm.setText("Data Peminjaman");
        btnBorrowForm.setPreferredSize(new java.awt.Dimension(150, 35));

        btnReturnForm.setFont(new java.awt.Font("Fira Sans", 0, 14)); // NOI18N
        btnReturnForm.setText("Data Pengembalian");
        btnReturnForm.setEnabled(false);
        btnReturnForm.setPreferredSize(new java.awt.Dimension(150, 35));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelDescription)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelHeading)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnMemberForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBorrowForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReturnForm, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelHeading)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBookForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnMemberForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBorrowForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReturnForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelDescription)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(174, 102, 231));

        labelSearch.setFont(new java.awt.Font("Fira Sans", 1, 18)); // NOI18N
        labelSearch.setText("Pencarian");

        cmbSearchColumn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "title", "name", "amount", "fine", "status" }));
        cmbSearchColumn.setPreferredSize(new java.awt.Dimension(150, 35));

        txtSearch.setPreferredSize(new java.awt.Dimension(300, 35));

        btnSearch.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnSearch.setText("Cari");
        btnSearch.setPreferredSize(new java.awt.Dimension(100, 35));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labelSearch)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbSearchColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSearchColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        labelID.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelID.setText("ID Pengembalian");

        txtID.setEditable(false);
        txtID.setEnabled(false);
        txtID.setPreferredSize(new java.awt.Dimension(100, 35));

        labelBookTitle.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelBookTitle.setText("Judul Buku");

        txtBookTitle.setEditable(false);
        txtBookTitle.setPreferredSize(new java.awt.Dimension(300, 35));

        labelUserName.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelUserName.setText("Peminjam");

        labelReturnedAt.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelReturnedAt.setText("Tanggal Pengembalian");

        labelFine.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelFine.setText("Denda");

        labelStatus.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelStatus.setText("Status");

        cmbStatus.setPreferredSize(new java.awt.Dimension(300, 35));

        btnEdit.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnEdit.setText("Ubah");
        btnEdit.setEnabled(false);
        btnEdit.setPreferredSize(new java.awt.Dimension(150, 35));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.setEnabled(false);
        btnDelete.setPreferredSize(new java.awt.Dimension(150, 35));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Fira Sans", 1, 14)); // NOI18N
        btnLogout.setText("Keluar");
        btnLogout.setPreferredSize(new java.awt.Dimension(150, 35));

        txtFine.setPreferredSize(new java.awt.Dimension(300, 35));

        txtUserName.setEditable(false);
        txtUserName.setPreferredSize(new java.awt.Dimension(300, 35));

        labelBorrowAmount.setFont(new java.awt.Font("Fira Sans", 1, 16)); // NOI18N
        labelBorrowAmount.setText("Jumlah Buku");

        txtBorrowAmount.setEditable(false);
        txtBorrowAmount.setPreferredSize(new java.awt.Dimension(75, 35));

        jLabel10.setText("buku");

        cmbReturnedAt.setDateFormatString("d MMMMM y");
        cmbReturnedAt.setPreferredSize(new java.awt.Dimension(300, 35));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(381, 381, 381)
                .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(419, 419, 419))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelBorrowAmount)
                    .addComponent(labelBookTitle)
                    .addComponent(labelID)
                    .addComponent(labelUserName))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFine, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelStatus, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelReturnedAt, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(48, 48, 48)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbReturnedAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(124, 124, 124))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtBorrowAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelID)
                        .addComponent(labelReturnedAt))
                    .addComponent(cmbReturnedAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBookTitle)
                    .addComponent(labelFine)
                    .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelStatus))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelUserName)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBorrowAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBorrowAmount)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        tableReturns.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableReturns.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableReturnsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableReturns);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String query = "SELECT returns.id, title, name, amount, returned_at, fine, returns.status FROM returns "
                + "INNER JOIN "
                + "( "
                + "SELECT borrows.id, title, name, borrows.amount FROM borrows "
                + "INNER JOIN books ON borrows.book_id = books.id "
                + "INNER JOIN users ON borrows.user_id = users.id "
                + ") AS borrows "
                + "ON returns.borrow_id = borrows.id "
                + "WHERE " + cmbSearchColumn.getSelectedItem().toString() + " LIKE ? "
                + "ORDER BY id DESC";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setString(1, "%" + txtSearch.getText() + "%");

            ResultSet result = statement.executeQuery();

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tableModel.addColumn("ID");
            tableModel.addColumn("Judul");
            tableModel.addColumn("Peminjam");
            tableModel.addColumn("Jumlah");
            tableModel.addColumn("Tanggal Pengembalian");
            tableModel.addColumn("Denda");
            tableModel.addColumn("Status");

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            tableModel.setRowCount(0);

            while (result.next()) {
                Object[] data = {
                    result.getLong("id"),
                    result.getString("title"),
                    result.getString("name"),
                    result.getString("amount"),
                    new SimpleDateFormat("d MMMMM y").format(result.getDate("returned_at")),
                    result.getInt("fine"),
                    result.getString("status")
                };

                tableModel.addRow(data);
            }

            tableReturns.setModel(tableModel);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error ambil data: " + exception.getMessage());
        } finally {
            database.close();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tableReturnsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableReturnsMouseClicked
        String id = tableReturns.getValueAt(tableReturns.getSelectedRow(), 0).toString();
        String title = tableReturns.getValueAt(tableReturns.getSelectedRow(), 1).toString();
        String name = tableReturns.getValueAt(tableReturns.getSelectedRow(), 2).toString();
        String amount = tableReturns.getValueAt(tableReturns.getSelectedRow(), 3).toString();

        Date returnedAt = null;
        try {
            returnedAt = new SimpleDateFormat("d MMMMM y").parse(tableReturns.getValueAt(tableReturns.getSelectedRow(), 4).toString());
        } catch (ParseException exception) {
            JOptionPane.showMessageDialog(null, "Error parsing date: " + exception.getMessage());
        }

        String fine = tableReturns.getValueAt(tableReturns.getSelectedRow(), 5).toString();
        String status = tableReturns.getValueAt(tableReturns.getSelectedRow(), 6).toString();

        EDIT_CURRENT_STATUS = status;
        cmbStatus.setEnabled(true);
        txtFine.setEnabled(true);

        String[] statusModel;
        switch (EDIT_CURRENT_STATUS) {
            case "Belum dikonfirmasi":
                statusModel = new String[]{"Belum dikonfirmasi", "Telah dikembalikan"};
                txtFine.setEnabled(false);
                break;
            case "Telah dikembalikan":
                statusModel = new String[]{"Telah dikembalikan"};
                cmbStatus.setEnabled(false);
                txtFine.setEnabled(false);
                break;
            case "Terlambat":
                statusModel = new String[]{"Terlambat", "Belum membayar denda"};
                break;
            case "Belum membayar denda":
                statusModel = new String[]{"Belum membayar denda", "Telah dikembalikan"};
                break;
            default:
                statusModel = null;
        }

        cmbStatus.setModel(new DefaultComboBoxModel<>(statusModel));

        txtID.setText(id);
        txtBookTitle.setText(title);
        txtUserName.setText(name);
        txtBorrowAmount.setText(amount);
        cmbReturnedAt.setDate(returnedAt);
        txtFine.setText(fine);
        cmbStatus.setSelectedItem(status);

        btnEdit.setEnabled(true);
        btnDelete.setEnabled(true);
    }//GEN-LAST:event_tableReturnsMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        String id = txtID.getText();
        Date returnedAt = cmbReturnedAt.getDate();
        String fine = txtFine.getText();
        String status = cmbStatus.getSelectedItem().toString();

        if (Validator.isEmpty(id) || returnedAt == null) {
            JOptionPane.showMessageDialog(null, "Kolom id dan tanggal pengembalian tidak boleh kosong!");
            return;
        }

        Database database = new Database();

        try {
            String query = "UPDATE returns SET returned_at = ?, confirmation = ?, status = ?, fine = ? WHERE id = ?";

            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setDate(1, new java.sql.Date(returnedAt.getTime()));

            // cek apakah status pengembalian berubah
            if (!status.equals(EDIT_CURRENT_STATUS)) {
                if (EDIT_CURRENT_STATUS.equals("Terlambat") && status.equals("Belum membayar denda")) {
                    // jika status awal adalah Terlambat dan berubah menjadi Belum membayar denda
                    if (Validator.isEmpty(fine) && Validator.isNotLong(fine)) {
                        JOptionPane.showMessageDialog(null, "Kolom denda tidak boleh kosong dan harus berupa angka!");
                        return;
                    }

                    statement.setInt(2, 0);
                } else {
                    // jika status awal adalah Belum Dikonfirmasi dan berubah menjadi Telah dikembalikan
                    // atau
                    // jika status awal adalah Belum membayar denda dan berubah menjadi Telah dikembalikan
                    statement.setInt(2, 1);

                    String q1 = "SELECT * FROM books WHERE title = '" + txtBookTitle.getText() + "' LIMIT 1";
                    ResultSet result = database.connection.createStatement().executeQuery(q1);

                    if (result.next()) {
                        String q2 = "UPDATE books SET amount = ? WHERE id = ?";

                        PreparedStatement stmt = database.connection.prepareStatement(q2);
                        stmt.setInt(1, result.getInt("amount") + Integer.parseInt(txtBorrowAmount.getText()));
                        stmt.setLong(2, result.getLong("id"));

                        stmt.executeUpdate();
                    }
                }
            } else {
                switch (status) {
                    case "Belum dikonfirmasi":
                    case "Terlambat":
                    case "Belum membayar denda":
                        statement.setInt(2, 0);
                        break;
                    case "Telah dikembalikan":
                        statement.setInt(2, 1);
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "Status tidak diketahui!");
                        return;
                }
            }

            statement.setString(3, status);

            if (Long.parseLong(fine) == 0) {
                statement.setNull(4, java.sql.Types.BIGINT);
            } else {
                statement.setLong(4, Long.parseLong(fine));
            }

            statement.setLong(5, Long.parseLong(id));

            statement.executeQuery();

            JOptionPane.showMessageDialog(null, "Berhasil mengubah data!");
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error update data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtBookTitle.setText("");
        txtUserName.setText("");
        txtBorrowAmount.setText("");
        cmbReturnedAt.setCalendar(null);
        txtFine.setText("");
        txtFine.setEnabled(true);
        cmbStatus.setEnabled(true);
        cmbStatus.setModel(new DefaultComboBoxModel<>(new String[]{}));

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int confirmation = JOptionPane.showConfirmDialog(
                null,
                "Data ini akan dihapus, lanjutkan?",
                "Konfirmasi", JOptionPane.YES_NO_OPTION
        );

        if (confirmation != JOptionPane.YES_OPTION) {
            return;
        }

        String id = txtID.getText();

        if (Validator.isEmpty(id)) {
            JOptionPane.showMessageDialog(null, "Kolom ID tidak boleh kosong!");
        }

        String query = "DELETE FROM returns WHERE id = ?";
        Database database = new Database();

        try {
            PreparedStatement statement = database.connection.prepareStatement(query);
            statement.setLong(1, Long.parseLong(id));

            statement.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil menghapus data!");
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error hapus data: " + exception.getMessage());
        } finally {
            database.close();
        }

        txtID.setText("");
        txtBookTitle.setText("");
        txtUserName.setText("");
        txtBorrowAmount.setText("");
        cmbReturnedAt.setCalendar(null);
        txtFine.setText("");
        txtFine.setEnabled(true);
        cmbStatus.setEnabled(true);
        cmbStatus.setModel(new DefaultComboBoxModel<>(new String[]{}));

        cmbSearchColumn.setSelectedIndex(0);
        txtSearch.setText("");

        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);

        showData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnBookFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookFormActionPerformed
        this.setVisible(false);

        new BookForm().setVisible(true);
    }//GEN-LAST:event_btnBookFormActionPerformed

    private void showData() {
        String query = "SELECT returns.id, title, name, amount, returned_at, fine, returns.status FROM returns "
                + "INNER JOIN "
                + "( "
                + "SELECT borrows.id, title, name, borrows.amount FROM borrows "
                + "INNER JOIN books ON borrows.book_id = books.id "
                + "INNER JOIN users ON borrows.user_id = users.id "
                + ") AS borrows "
                + "ON returns.borrow_id = borrows.id "
                + "ORDER BY id DESC";
        Database database = new Database();

        try {
            ResultSet result = database.connection.createStatement().executeQuery(query);

            DefaultTableModel tableModel = new DefaultTableModel() {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            tableModel.addColumn("ID");
            tableModel.addColumn("Judul");
            tableModel.addColumn("Peminjam");
            tableModel.addColumn("Jumlah");
            tableModel.addColumn("Tanggal Pengembalian");
            tableModel.addColumn("Denda");
            tableModel.addColumn("Status");

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            tableModel.setRowCount(0);

            while (result.next()) {
                Object[] data = {
                    result.getLong("id"),
                    result.getString("title"),
                    result.getString("name"),
                    result.getString("amount"),
                    new SimpleDateFormat("d MMMMM y").format(result.getDate("returned_at")),
                    result.getInt("fine"),
                    result.getString("status")
                };

                tableModel.addRow(data);
            }

            tableReturns.setModel(tableModel);
        } catch (SQLException exception) {
            JOptionPane.showMessageDialog(null, "Error ambil data: " + exception.getMessage());
        } finally {
            database.close();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookForm;
    private javax.swing.JButton btnBorrowForm;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMemberForm;
    private javax.swing.JButton btnReturnForm;
    private javax.swing.JButton btnSearch;
    private com.toedter.calendar.JDateChooser cmbReturnedAt;
    private javax.swing.JComboBox<String> cmbSearchColumn;
    private javax.swing.JComboBox<String> cmbStatus;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelBookTitle;
    private javax.swing.JLabel labelBorrowAmount;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelFine;
    private javax.swing.JLabel labelHeading;
    private javax.swing.JLabel labelID;
    private javax.swing.JLabel labelReturnedAt;
    private javax.swing.JLabel labelSearch;
    private javax.swing.JLabel labelStatus;
    private javax.swing.JLabel labelUserName;
    private javax.swing.JTable tableReturns;
    private javax.swing.JTextField txtBookTitle;
    private javax.swing.JTextField txtBorrowAmount;
    private javax.swing.JTextField txtFine;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
